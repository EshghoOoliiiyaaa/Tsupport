buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.1'
    }
}

apply plugin: 'android'

repositories {
    maven {
        url 'http://google-api-client-libraries.appspot.com/mavenrepo'
    }
    mavenCentral()
    mavenLocal()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    compile 'com.android.support:support-v4:20.0.+'
    compile 'com.google.android.gms:play-services:4.1.+'
    compile 'net.hockeyapp.android:HockeySDK:3.0.1'
    compile 'com.googlecode.mp4parser:isoparser:1.0.2'
    compile files('libs/ownedConversation-v1-1.19.0-SNAPSHOT.jar')
    // Add the Google API client library.
    compile(group: 'com.google.api-client', name: 'google-api-client', version: '1.17.0-rc') {
        // Exclude artifacts that the Android SDK/Runtime provides.
        exclude(group: 'xpp3', module: 'xpp3')
        exclude(group: 'org.apache.httpcomponents', module: 'httpclient')
        exclude(group: 'junit', module: 'junit')
        exclude(group: 'com.google.android', module: 'android')
    }
    compile(group: 'com.google.api-client', name: 'google-api-client-android',
            version: '1.17.0-rc')
        {
            // Exclude play services, since we're not using this yet.
            exclude(group: 'com.google.android.google-play-services', module: 'google-play-services')
        }

    // Android extensions for Google HTTP Client.
    compile(group: 'com.google.http-client', name: 'google-http-client-android',
            version: '1.17.0-rc') {
        exclude(group: 'com.google.android', module: 'android')
    }

    // This is used by the Google HTTP client library.
    compile(group: 'com.google.guava', name: 'guava', version: '14.0.+')

}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'
    aaptOptions.useAaptPngCruncher = true
    signingConfigs {
        debug {
            storeFile file('config/debug.keystore')
        }
        release {
            storeFile file("config/release.keystore")
            storePassword "android"
            keyAlias "androidreleasekey"
            keyPassword "android"
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebugBuild false
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            jniDebugBuild false
            signingConfig signingConfigs.release
        }
        foss {
            debuggable false
            jniDebugBuild false
            signingConfig signingConfigs.release
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }
    sourceSets {
        debug {
            manifest.srcFile 'config/debug/AndroidManifest.xml'
        }
        release {
            manifest.srcFile 'config/release/AndroidManifest.xml'
        }
        foss {
            manifest.srcFile 'config/foss/AndroidManifest.xml'
        }
    }
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionCode 19
        versionName '1.0.9'
    }
    lintOptions {
        checkReleaseBuilds false
    }
    productFlavors {
    }
}
