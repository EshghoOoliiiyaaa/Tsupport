buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.13.+'
    }
}
apply plugin: 'com.android.application'

repositories {
    maven { url 'http://google-api-client-libraries.appspot.com/mavenrepo' }
    mavenCentral()
    mavenLocal()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    compile 'com.android.support:support-v4:20.0.+'
    compile 'com.google.android.gms:play-services:4.1.+'
    compile 'net.hockeyapp.android:HockeySDK:3.0.2'
    compile 'com.googlecode.mp4parser:isoparser:1.0.2'
    // Libraries for Servers
    compile files('libs/ownedConversation.jar')
    compile files('libs/users.jar')
    compile files('libs/markedConversation.jar')
    // Add the Google API client library.
    compile('com.google.api-client:google-api-client:1.17.0-rc') {
        // Exclude artifacts that the Android SDK/Runtime provides.
        exclude(group: 'xpp3', module: 'xpp3')
        exclude(group: 'org.apache.httpcomponents', module: 'httpclient')
        exclude(group: 'junit', module: 'junit')
        exclude(group: 'com.google.android', module: 'android')
    }
    compile('com.google.api-client:google-api-client-android:1.17.0-rc') {
        // Exclude play services, since we're not using this yet.
        exclude(group: 'com.google.android.google-play-services', module: 'google-play-services')
    }
    // Android extensions for Google HTTP Client.
    compile('com.google.http-client:google-http-client-android:1.17.0-rc') {
        exclude(group: 'com.google.android', module: 'android')
    }
    // This is used by the Google HTTP client library.
    compile 'com.google.guava:guava:14.0.+'
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.0.0'
    aaptOptions.useAaptPngCruncher = true

    signingConfigs {
        debug {
            storeFile file('config/debug.keystore')
        }
        release {
            storeFile file('config/release.keystore')
            storePassword 'android'
            keyAlias 'release'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebugBuild false
            signingConfig signingConfigs.release
        }
        release {
            debuggable false
            jniDebugBuild false
            signingConfig signingConfigs.release
            zipAlign true
        }

        foss {
            debuggable false
            jniDebugBuild false
            signingConfig signingConfigs.release
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    sourceSets {
        debug {
            manifest.srcFile 'config/debug/AndroidManifest.xml'
        }
        release {
            manifest.srcFile 'config/release/AndroidManifest.xml'
        }
        foss {
            manifest.srcFile 'config/foss/AndroidManifest.xml'
        }
    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 40
        versionName '1.20.2b'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    productFlavors {
    }
}
